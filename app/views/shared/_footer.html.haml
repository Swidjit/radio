#gapless5-block
%footer.footer
  .row
    .small-12.medium-6.large-3.columns
      %p.logo
        %i.fi-shield
        Crazy Dancing Guy
      %p.footer-links
        =link_to "About", pages_path("about")
        =link_to "How it Works", pages_path("how-it-works")
        =link_to "Privacy Policy", pages_path("privacy")
        =link_to "Contact Me", '/contact-us'
        -if user_signed_in?

          = link_to "Log out", destroy_session_path(:user), :method => :delete

    .small-12.medium-6.large-4.columns
      %p.logo Socialize with us
      %ul.contact
        %li
          %p
            %i.fi-social-facebook>
            =link_to 'facebook.com/CrazyDancingGuy', 'http://facebook.com/CrazyDancingGuy'
        %li
          %p
            %i.fi-social-twitter>
            =link_to 'twitter.com/CrazyDancingGuy', 'http://twitter.com/CrazyDancingGuy'

    .small-12.medium-6.large-5.columns

      %ul.hashtags
        %h3=link_to '@crazydancingguy',"http://crazydancingguy.com"
        %li=link_to '#climatejustice', 'https://twitter.com/hashtag/climatejustice'
        %li=link_to '#socialjustice', 'https://twitter.com/hashtag/socialjustice'
        %li=link_to '#genderequality', 'https://twitter.com/hashtag/genderequality'
      %hr
      .footer-links{:style=>'text-align:center;'}
        =link_to "Play With Your Mind", "http://playwithyourmind.com"
        =link_to "Presidential Election Games", "http://presidentialelectiongames.com"
        =link_to "The Keyboard Playground", "http://freeonlinetypinggames.com"
        =link_to "Good Luck Test", "http://goodlucktest.com"

#login.reveal-modal.remove-whitespace{"data-reveal" => ""}
  .row
    .large-6.columns.auth-plain
      .signup-panel.left-solid
        %p.welcome Registered Users
        %form#login-form
          .row.collapse
            .small-2.columns
              %span.prefix
                %i.fi-torso-female
            .small-10.columns
              %input{:placeholder => "username", :type => "text", :id =>'login-username'}
          .row.collapse
            .small-2.columns
              %span.prefix
                %i.fi-lock
            .small-10.columns
              %input{:placeholder => "password", :type => "password", :id => 'login-password'}
        %a.button{:href => "#",:id=>'login-button'} Log In
    .large-6.columns.auth-plain
      .signup-panel.newusers
        %p.welcome No account... yet?
        %p Why not sign up and exercise your first ammendment right to have some fun?  It's easy!
        =link_to new_user_registration_path, :class=>'button' do
          Sign Up
  %a.close-reveal-modal ×
-if user_signed_in?
  #collect.reveal-modal{"data-reveal" => ""}
    %h3 add to playlist
    .row
      .large-5.columns
        %h4 Add to existing playlist
        =form_tag add_song_playlists_path, :method=>:post, :remote=>:true do |f|
          =hidden_field_tag :song_id, '',:class => 'song-id'
          %label playlist
          =select_tag :playlist_id, options_from_collection_for_select(current_user.playlists, :id, :title), :prompt => 'choose playlist'
          =submit_tag "Add", :class => "button"
      .large-7.columns
        %h4 Add to a new collection
        =form_for Playlist.new, :url => user_playlists_path(current_user), :method=>:post, :remote=>:true do |f|
          =hidden_field_tag :song_id, '',:class => 'song-id'
          %label Name your playlist
          =f.text_field :title
          %label Describe your playlist
          =f.text_area :description
          =f.submit "Add to New", :class => "button"

    %a.close-reveal-modal ×
  :javascript
    $(document).on('click','.playlists',function() {
      $('#show-list').html('#{j render current_user.playlists}');
      $("html, body").animate({
       scrollTop:0
       },"fast");

    });

#new-post.reveal-modal{"data-reveal" => ""}
  #form
  %a.close-reveal-modal ×

-if user_signed_in?
  :javascript
    $.get('/pages/dashboard');

-else
  :javascript
    $.get('/pages/popular');

:javascript
  var current_song;
  var current_filename;
  var root_url;

  var mode = "shuffle";
  var playlist;
  var show;
  var current_track;
  var queue= [];
  var filenames = [];
  var player = new Gapless5("gapless5-block", {
    loop: false,
    mapKeys: {prev: "a", playpause: "s", stop: "d", next: "f"}
  });
  console.log(player);

  player.onnext = function() {
    console.log('next');
    console.log(player.tracks[0].split('/')[filename.length-1]);
    filename = player.tracks[1].split('/');
    if(filenames[filename[filename.length-1]] !== undefined) {
      $('#player .song-title').html(filenames[filename[filename.length-1]].song);
      $('#player .song-show').html(filenames[filename[filename.length-1]].show);
    }
    current_track += 1;
  console.log(filename);
  $.get('/songs/load',{filename:filename[filename.length-1]});

  };
  player.onfinishedall = function() {
  console.log('done');

  };
  player.onpause = function() {
    $('#player .play').show();
    $('#player .pause').hide();

  }
  player.onplay = function() {
    $('#player .play').hide();
    $('#player .pause').show();
    filename = player.tracks[0].split('/');
    if(filenames[filename[filename.length-1]] !== undefined) {
      $('#player .song-title').html(filenames[filename[filename.length-1]].song);
      $('#player .song-show').html(filenames[filename[filename.length-1]].show);
    }
    console.log(filename);
    $.get('/songs/load',{filename:filename[filename.length-1]});
  };
  $('#login-button').on('click', function() {
    var data = {
      user: {login: $('#login-username').val(), password: $('#login-password').val(), remember_me: '1'}
    }

    $.ajax({ url: '/users/sign_in',
      type: 'POST',
      headers: {
          'X-CSRF-Token': '<%= form_authenticity_token.to_s %>'
        },
      data: data,
      success: function(response) {
        $('#login').foundation('reveal','close');
        $('.menu ul.inline-list').empty();
        setTimeout(function() {
           $('.menu ul.inline-list').html('#{escape_javascript render :partial=>"users/header_menu"}');
           window.location = '#{root_path}';
        }, 1000);


      },
      error: function(xhr, status, error) {
          alert(xhr.responseText);
       }
    });
  });

  $(document).on('click', '.play-song', function() {

    $('#player').show();
    origin = $(this).attr('origin');
    filenames = [];
    if(origin=='show' && mode != 'radio') {
      mode = 'show';

      current_track = parseInt($(this).attr("track"))-1;
      show = $(this).closest('.show');
      loadShowIntoPlayer();


    }
    else if(origin=='playlist') {
      mode = 'playlist';
      current_track = parseInt($(this).attr("track"));
      playlist = $(this).closest('.playlist');
      tracks = [];
      queue = [];
      player.stop();
      player.removeAllTracks();

      $.each(playlist.find('.play-song'), function(i,val) {
        if(i >= current_track) {
          if(i < (current_track+2)) {
            player.addTrack('https://archive.org/download/'+$(this).attr('show_id')+'/'+$(this).attr('filename'));
          }
          else {
            queue.push('https://archive.org/download/'+$(this).attr('show_id')+'/'+$(this).attr('filename'));
          }
        }
        if(i==current_track) {
          $('#player .song-title').html($(this).attr('title'));
          $('#player .song-show').html($(this).attr('show'));
        }
        filenames[$(this).attr('filename')] = {'show':$(this).attr('show'),'song':$(this).attr('title')};
      });
      player.play();
    }
    else {
      player.stop();
      player.removeAllTracks();
      player.addTrack('https://archive.org/download/'+$(this).attr('show_id')+'/'+$(this).attr('filename'));
      mode="shuffle";
      player.play();
      console.log('sds');
      console.log($(this).attr('title'));
      $('#player .song-title').html($(this).attr('title'));
      $('#player .song-show').html($(this).attr('show'));
    }

    $('#player .play').hide();
    $('#player .pause').show();
    $('#show-list').removeClass('large-12 large-6');
    $('#show-list').removeClass('medium-12 medium-6');
    $('#show-list').addClass('large-6');
    $('#show-list').addClass('medium-6');

    $("html, body").animate({
     scrollTop:0
     },"fast");
  });

  $(document).on('click', '.pause', function() {
    player.pause();

  });
  $(document).on('click', '.play', function() {
    player.play();

  });
  $(document).on('click', '.refresh', function() {
    radio();

  });
  $(document).on('click', '.fast-forward', function() {

  });

  $(document).on('click', '.next', function() {

    nextSong();

  });

  function shuffle() {
    $('#player').show();
    $.get('/songs/shuffle', function(e) {
      $.each(e, function(i, song) {
        if(i <= 2) {
          player.addTrack('https://archive.org/download/'+song.show_id+'/'+song.filename);
        }
        else {
          queue.push('https://archive.org/download/'+song.show_id+'/'+song.filename);
        }
        filenames[$(this).attr('filename')] = {'show':song.show,'song':song.name};
      });
      player.play();

    });
  }

  function initradio() {
    $('#player').show();
    player.tracks = player.tracks.slice(0,1);
    queue = [];
    $.get('/songs/radio', function(e) {
      console.log(e);
      $.each(e, function(i, song) {
        if(i <= 2) {
          player.addTrack('https://archive.org/download/'+song.show_id+'/'+song.filename);
        }
        else {
          queue.push('https://archive.org/download/'+song.show_id+'/'+song.filename);
        }
        filenames[$(this).attr('filename')] = {'show':song.show,'song':song.name};
      });

    });
  }

  function radio() {
    $('#player').show();

    queue = [];
    $.get('/songs/radio', function(e) {
      console.log(e);
      $.each(e, function(i, song) {
        if(i <= 2) {
          player.addTrack('https://archive.org/download/'+song.show_id+'/'+song.filename);
        }
        else {
          queue.push('https://archive.org/download/'+song.show_id+'/'+song.filename);
        }
        filenames[$(this).attr('filename')] = {'show':song.show,'song':song.name};
      });
      player.play();

    });
  }

  function nextSong() {
    player.stop();
    if(player.tracks.length <= 2) {
      $.each(queue.slice(0,2), function(i,val) {
        player.addTrack(val);
      });
      queue.shift();
      queue.shift();
      if(queue.length < 2) {
        getMoreSongs();
      }
    }
    player.removeTrack(0);
    current_track += 1;
    player.play();

  }

  function getMoreSongs() {

    if(mode == "shuffle") {
      shuffle();
    }
    else if(mode == "radio") {
      radio();
    }
    else if(mode == "playlist"){
      playlist = playlist.next();

      if(!playlist.hasClass('playlist')) {
        mode = 'shuffle';
        shuffle();

      }
      else {
        current_track=0;
        loadShowIntoPlayer();
      }
    }
    else if(mode == "show"){
      show = show.next();

      if(!show.hasClass('show')) {
        mode = 'shuffle';
        $.get('/shows/load_random/');

      }
      else {
        current_track=0;
        loadShowIntoPlayer();
      }
    }

  }

  function loadShowIntoPlayer() {
    tracks = [];
    queue = [];
    player.stop();
    player.removeAllTracks();

    $.each(show.find('.play-song'), function(i,val) {
      if(i >= current_track) {
        if(i < (current_track+2)) {
          player.addTrack('https://archive.org/download/'+$(this).attr('show_id')+'/'+$(this).attr('filename'));
        }
        else {
          queue.push('https://archive.org/download/'+$(this).attr('show_id')+'/'+$(this).attr('filename'));
        }
      }

      filenames[$(this).attr('filename')] = {'show':$(this).attr('show'),'song':$(this).attr('title')};
    });
    player.play();
  }

  function nextShowSong() {
    console.log(current_track);
    console.log('showsdsd');
    console.log(show.find('.show-songs .song-listing').length);
    console.log(show);
    if(current_track == show.find('.song-listing').length) {
      current_track = 0;
      show = show.next();

      if(!show.hasClass('show')) {
        mode = 'shuffle';
        $.get('/shows/load_random/');

      }
      else {
        obj = show.find('.song-listing').eq(current_track);
        filename = obj.attr('filename');
        current_filename = filename;
        play(obj.attr('show_id'),filename);
      }
    }
    else {

      obj = show.find('.song-listing').eq(current_track).find('.play-song');
      console.log(obj);
      console.log(obj.attr("filename"));
      console.log(obj.attr("filename"));
      filename = obj.attr('filename');

      current_filename = filename;

      play(obj.attr('show_id'),filename);
    }

  }
  function nextPlaylistSong() {
    console.log(current_track);
    if(current_track == playlist.find('.song-link').length) {
      current_track = 0;
      playlist = playlist.next();

      if(!playlist.hasClass('playlist')) {
        mode = 'shuffle';
        $.get('/songs/shuffle');

      }
      else {
        obj = playlist.find('.song-link').eq(current_track);
        filename = obj.attr('filename');
        current_filename = filename;

        song_id = obj.attr('song_id');
        $.get('/songs/load/'+song_id);
      }
    }
    else {
      obj = playlist.find('.song-link').eq(current_track);
      console.log('we');
      filename = obj.attr('filename');
      current_filename = filename;

      song_id = obj.attr('song_id');
      $.get('/songs/load/'+song_id);
    }

  }

  function playSong(song) {
      filename = '';
      song_name = '';
      filename = song.attr('filename');
      song_name = song.attr('title');
      song_show = song.attr('show');
      song_id = song.attr('song_id');
      current_filename = filename;

      $.get('/songs/load/'+song_id);





  }

  $(document).on('click','.shuffle',function() {
    if(mode == "shuffle") {
      mode = "off";
      $(this).removeClass('selected');
    }
    else {
      mode = "shuffle";
      $(this).addClass('selected');
    }

  });
  $(document).on('click','.radio',function() {
    if(mode == "radio") {
      mode = "off";
      $(this).removeClass('selected');
    }
    else {
      mode = "radio";
      $(this).addClass('selected');
      initradio();
    }
    console.log(mode);
  });


  $(document).on('click','.band',function() {
    band_id = $(this).attr('band_id')
    $.get('/bands/'+band_id);

  });

  $(document).on('click','.show-bands',function() {
    $('#show-list').html('#{j render :partial=>"bands/band_list"}');
  });

  $(document).on('mouseover','.vote',function() {
    labels = ['never','infrequently','regularly','frequently'];
    num = $(this).index();
    $('.vote-lebel').html(labels[num]);

    do {
    $('.votes .vote:eq('+num+')').css('opacity','1');
    num--;
    } while(num>=0);

  });
  $(document).on('mouseout','.vote',function() {
    if($('.votes').hasClass('votable')) {
      $('.vote').css('opacity','.4');
    }


  });
  $(document).on('click','.song-frequency-label',function() {
    $('.song-frequency').toggle();
  });

  $(document).on('click','.show',function() {
    $('.show-songs').hide();
    $(this).find('.show-songs').toggle();
    if($(this).find('.show-title').hasClass('expanded')) {
      $(this).find('.show-title').removeClass('expanded');
    }
    else {
      $(this).find('.show-title').addClass('expanded');
    }

  });

  $(document).on('click','.playlist',function() {
    $('.playlist-songs').hide();
    $(this).find('.playlist-songs').toggle();
    if($(this).find('.playlist-title').hasClass('expanded')) {
      $(this).find('.playlist-title').removeClass('expanded');
    }
    else {
      $(this).find('.playlist-title').addClass('expanded');
    }

  });



  $( document ).on( 'click', '.collect', function () {
    var id = $(this).data('song-id');
    $('#collect .song-id').val(id);
    $('#collect').foundation('reveal','open');
  });






